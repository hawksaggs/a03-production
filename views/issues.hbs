<div>
  <div>
    <table id="table"
      data-detail-view="true"
      data-row-style="rowStyle",
      data-minimum-count-columns="2"
      data-pagination="true"
      data-id-field="id"
      data-page-list="[10, 25, 50, 100, all]"
      data-side-pagination="server"
      data-ajax="ajaxRequest"
      data-response-handler="responseHandler">
    </table>
  </div>
</div>
<script>
  socket.on('issue-event', function (data) {
      console.log('data: ', data);
      $table.bootstrapTable('insertRow', {
        index: 0,
        row: {
          id: data.issue.id,
          title: data.issue.title,
          description: data.issue.description,
          'author.name': data.issue.author.name,
          due_date: data.issue.due_date
        }
      });
      $table.bootstrapTable('refresh');
      $table.bootstrapTable('refreshOptions', { silent: true });
    });
</script>
<script>
  var $table = $('#table')
  var $remove = $('#remove')
  var selections = []

  // your custom ajax request here
  function ajaxRequest(params) {
    var url = 'http://localhost:3000/issues';
    $.get(url + '?' + $.param(params.data)).then(function (res) {
      params.success(res)
    })
  }

  function responseHandler(res) {
    console.log('responseHandler: ', res);
    return res.data;
  }

  function rowStyle(row, index) {
    return {
      css: {
        cursor: 'pointer'
      }
    }
  }

  function getIdSelections() {
    return $.map($table.bootstrapTable('getSelections'), function (row) {
      return row.id
    })
  }

  window.operateEvents = {
    'click .like': function (e, value, row, index) {
      alert('You click like action, row: ' + JSON.stringify(row))
    },
    'click .remove': function (e, value, row, index) {
      $table.bootstrapTable('remove', {
        field: 'id',
        values: [row.id]
      })
    }
  }

  function initTable() {
    $table.bootstrapTable('destroy').bootstrapTable({
      height: 550,
      locale: 'en-US',
      columns: [
        [
          {
            title: 'Title',
            field: 'title',
            align: 'center'
          },
          {
            title: 'Description',
            field: 'description',
            align: 'center'
          },
          {
            title: 'Author',
            field: 'author.name',
            align: 'center'
          },
          {
            title: 'Due Date',
            field: 'due_date',
            align: 'center'
          }
        ],
      ]
    })
    /**
    $table.on('check.bs.table uncheck.bs.table ' +
      'check-all.bs.table uncheck-all.bs.table',
      function () {
        $remove.prop('disabled', !$table.bootstrapTable('getSelections').length)

        // save your data, here just save the current page
        selections = getIdSelections()
        // push or splice the selections if you want to save all data selections
      })
      */
    $table.on('all.bs.table', function (e, name, args) {
      console.log(name, args)
    });

    $table.on('click-row.bs.table', function (row, $element, field) {
      console.log('row: ', row);
      console.log('element: ', $element);
      console.log('field: ', field);
      {{!-- location.href = $element.web_url --}}
      window.open($element.web_url, "_blank");
    });

    /**
    $remove.click(function () {
      var ids = getIdSelections()
      $table.bootstrapTable('remove', {
        field: 'id',
        values: ids
      })
      $remove.prop('disabled', true)
    })
    */
  }

  $(function () {
    initTable()
  })
</script>